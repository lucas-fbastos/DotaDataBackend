version: "3.9"
services:
  web:
    build: .
    ports:
      - "8080:8080"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - my_network
    restart: unless-stopped
    volumes:
      - ./build/libs/DotaTrainerBackend-0.0.1-SNAPSHOT.jar:/app/DotaTrainerBackend-0.0.1-SNAPSHOT.jar
  db:
    image: postgres
    container_name: appdb
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-appdb}
    ports:
      - "5432:5432"
    volumes:
      - db_data:/var/lib/postgresql/data/
      - ./init_db.sql:/docker-entrypoint-initdb.d/init.sql
    command: [ "sh", "-c", "chown -R postgres:postgres /docker-entrypoint-initdb.d/ && chmod -R 755 /docker-entrypoint-initdb.d/ && docker-entrypoint.sh postgres" ]
    networks:
      - my_network
    restart: unless-stopped
  redis:
    container_name: appcache
    image: redis
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD:-password}
    networks:
      - my_network
    restart: unless-stopped

networks:
  my_network:

volumes:
  db_data:
